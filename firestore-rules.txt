rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users collection
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if false;
    }

    // Payment requests collection
    match /paymentRequests/{docId} {
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow read: if request.auth != null && (resource.data.uid == request.auth.uid || isAdmin());
      allow update: if request.auth != null && isAdmin();
      allow delete: if false;
    }

    // Admins collection
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // Referral bonuses collection
    match /referralBonuses/{docId} {
      allow read: if request.auth != null && (resource.data.referrerId == request.auth.uid || isAdmin());
      allow write: if false;
    }

    // Deny all other access
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
